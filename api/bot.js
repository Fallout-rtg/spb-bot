const { Telegraf, Markup } = require('telegraf');

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const BOT_TOKEN = process.env.BOT_TOKEN;

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const CHANNEL_ID = -1002696885166;
const CHAT_ID = -1002899007927; // –ß–∞—Ç –∫–∞–Ω–∞–ª–∞
const ADMIN_CHAT_ID = -4969760870; // –ß–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
const ADMIN_IDS = [2032240231, 1465194766];
const ADMIN_NAMES = {
  2032240231: '–°–æ–≤–µ—Ç—á–∏–∫ üìú',
  1465194766: '–°–ø–µ–∫—Ç—Ä ‚ô¶Ô∏è'
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// –ú–∞—Å—Å–∏–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤
let ALLOWED_CHATS = [CHAT_ID, ADMIN_CHAT_ID];

// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –û–ë–Å–†–¢–ö–ê –î–õ–Ø –ë–ï–ó–û–ü–ê–°–ù–û–ì–û –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî //
function safeHandler(handler) {
  return async (ctx) => {
    try {
      await handler(ctx);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:', err);
    }
  };
}

// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –£–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ó–†–ï–®–ï–ù–ù–´–ú–ò –ß–ê–¢–ê–ú–ò ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî //
bot.command('+id', safeHandler(async (ctx) => {
  if (!ADMIN_IDS.includes(ctx.from.id)) return ctx.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
  
  const args = ctx.message.text.split(' ');
  if (args.length < 2) return ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ ID —á–∞—Ç–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã: /+id <ID_—á–∞—Ç–∞>');
  
  const chatId = parseInt(args[1]);
  if (isNaN(chatId)) return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —á–∞—Ç–∞. –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID.');
  
  if (!ALLOWED_CHATS.includes(chatId)) {
    ALLOWED_CHATS.push(chatId);
    return ctx.reply(`‚úÖ –ß–∞—Ç —Å ID ${chatId} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ.`);
  } else {
    return ctx.reply(`‚ÑπÔ∏è –ß–∞—Ç —Å ID ${chatId} —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.`);
  }
}));

bot.command('-id', safeHandler(async (ctx) => {
  if (!ADMIN_IDS.includes(ctx.from.id)) return ctx.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
  
  const args = ctx.message.text.split(' ');
  if (args.length < 2) return ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ ID —á–∞—Ç–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã: /-id <ID_—á–∞—Ç–∞>');
  
  const chatId = parseInt(args[1]);
  if (isNaN(chatId)) return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID —á–∞—Ç–∞. –£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID.');
  
  const index = ALLOWED_CHATS.indexOf(chatId);
  if (index !== -1) {
    ALLOWED_CHATS.splice(index, 1);
    return ctx.reply(`‚úÖ –ß–∞—Ç —Å ID ${chatId} —É–¥–∞–ª–µ–Ω –∏–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.`);
  } else {
    return ctx.reply(`‚ÑπÔ∏è –ß–∞—Ç —Å ID ${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.`);
  }
}));

bot.command('/allowed_chats', safeHandler(async (ctx) => {
  if (!ADMIN_IDS.includes(ctx.from.id)) return ctx.reply('‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
  
  if (ALLOWED_CHATS.length === 0) return ctx.reply('üìù –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –ø—É—Å—Ç.');
  
  const chatList = ALLOWED_CHATS.map(id => `‚Ä¢ ${id}`).join('\n');
  return ctx.reply(`üìù –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —á–∞—Ç—ã:\n${chatList}`);
}));

// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –ó–ê–©–ò–¢–ê –û–¢ –î–û–ë–ê–í–õ–ï–ù–ò–Ø –í –ß–£–ñ–ò–ï –ß–ê–¢–´ ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî //
bot.on('message', safeHandler(async (ctx) => {
  if (ctx.message.new_chat_members) {
    const newMembers = ctx.message.new_chat_members;
    const isBotAdded = newMembers.some(member => member.is_bot && member.id === ctx.botInfo.id);
    
    if (isBotAdded) {
      const chatId = ctx.chat.id;
      if (!ALLOWED_CHATS.includes(chatId)) {
        try {
          const keyboard = Markup.inlineKeyboard([
            [Markup.button.url('–ö—Ä–∞—Å–Ω–∞—è –∑–≤–µ–∑–¥–∞', 'https://t.me/red_star_development')]
          ]);
          
          await ctx.reply(
            `üö´ –Ø –Ω–µ –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ!\n\n–≠—Ç–æ—Ç —á–∞—Ç –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö. –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω –ø–æ–¥–æ–±–Ω—ã–π –±–æ—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –ö—Ä–∞—Å–Ω–∞—è –∑–≤–µ–∑–¥–∞.`,
            { reply_markup: keyboard.reply_markup, disable_web_page_preview: true }
          );
          
          await new Promise(resolve => setTimeout(resolve, 2000));
          await ctx.leaveChat();
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —á–∞—Ç–∞:', error);
        }
      }
    }
  }
}));

// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –ö–û–ú–ê–ù–î–ê /HELP ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî //
bot.help(safeHandler(async (ctx) => {
  const userId = ctx.from.id;
  const chatType = ctx.chat.type;

  if (chatType === 'private') {
    if (ADMIN_IDS.includes(userId)) {
      const adminHelpText = `üõ†Ô∏è *–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:*\n\n` +
        `/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n/test - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã\n` +
        `/+id <ID_—á–∞—Ç–∞> - –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç\n/-id <ID_—á–∞—Ç–∞> - –£–¥–∞–ª–∏—Ç—å —á–∞—Ç\n/allowed_chats - –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö\n\n` +
        `*–ö–∞–∫ –æ—Ç–≤–µ—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:*\n1. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏\n2. –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ`;
      await ctx.reply(adminHelpText, { parse_mode: 'Markdown', disable_web_page_preview: true });
    } else {
      const userHelpText = `‚ÑπÔ∏è *–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:*\n\n` +
        `–Ø ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–æ—Ç –¥–ª—è –∫–∞–Ω–∞–ª–∞. –ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–¥ –∫–∞–∂–¥—ã–º –ø–æ—Å—Ç–æ–º.\n\n` +
        `–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /help, /info`;
      await ctx.reply(userHelpText, { parse_mode: 'Markdown', disable_web_page_preview: true });
    }
  }
}));

// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –õ–ò–ß–ù–´–ï –°–û–û–ë–©–ï–ù–ò–Ø ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî //
bot.start(safeHandler(async (ctx) => {
  const user = ctx.message.from;
  const firstName = user.first_name || '';
  const userID = user.id;

  let greeting = `üëã –ü—Ä–∏–≤–µ—Ç${firstName ? ', ' + firstName : ''}! –Ø ‚Äî –±–æ—Ç –∫–∞–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–¥ –∫–∞–∂–¥—ã–º –ø–æ—Å—Ç–æ–º.\n\n` +
                 `–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –º–µ–Ω—è –≤ –¥–µ–π—Å—Ç–≤–∏–∏! üòä`;

  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
  if (userID === 2032240231) { // –°–æ–≤–µ—Ç—á–∏–∫
    greeting = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –°–æ–≤–µ—Ç—á–∏–∫! üëã\n\n` +
               `–Ø ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–æ—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.\n` +
               `–ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–¥ –∫–∞–∂–¥—ã–º –ø–æ—Å—Ç–æ–º.\n\n` +
               `–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help ‚Äî —Ç–∞–º —É–∫–∞–∑–∞–Ω—ã –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.`;
  } else if (userID === 1465194766) { // –°–ø–µ–∫—Ç—Ä
    greeting = `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –°–ø–µ–∫—Ç—Ä! üëã\n\n` +
               `–Ø ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–æ—Ç –¥–ª—è –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞.\n` +
               `–ú–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–¥ –∫–∞–∂–¥—ã–º –ø–æ—Å—Ç–æ–º.\n\n` +
               `–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –º–Ω–æ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help ‚Äî —Ç–∞–º —É–∫–∞–∑–∞–Ω—ã –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.`;
  }

  await ctx.reply(greeting);
}));

bot.command('test', safeHandler(async (ctx) => {
  await ctx.reply('‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ!');
}));

bot.command('info', safeHandler(async (ctx) => {
  const infoText = `‚öôÔ∏è–û –±–æ—Ç–µ‚öôÔ∏è\n–í–µ—Ä—Å–∏—è: 0.0.1\n–ò–ò: Red-AI 0.1 \n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏: –ö—Ä–∞—Å–Ω–∞—è –∑–≤–µ–∑–¥–∞`;
  const keyboard = Markup.inlineKeyboard([
    [Markup.button.url('–ö—Ä–∞—Å–Ω–∞—è –∑–≤–µ–∑–¥–∞', 'https://t.me/red_star_development')]
  ]);
  await ctx.reply(infoText, { reply_markup: keyboard.reply_markup, disable_web_page_preview: true });
}));

// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî –û–ë–†–ê–ë–û–¢–ö–ê –ê–î–ú–ò–ù-–°–û–û–ë–©–ï–ù–ò–ô ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî //
bot.on('message', safeHandler(async (ctx) => {
  const message = ctx.message;
  const userId = message.from.id;
  const chatId = message.chat.id;

  if (ADMIN_IDS.includes(userId)) {
    if (message.reply_to_message) {
      const repliedMessage = message.reply_to_message;
      if (repliedMessage.forward_origin && repliedMessage.forward_origin.type === 'user') {
        const originalSender = repliedMessage.forward_origin.sender_user;
        if (originalSender) {
          const userChatId = originalSender.id;
          const adminName = ADMIN_NAMES[userId] || '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä';

          let responseText = `üîπ –û—Ç–≤–µ—Ç –æ—Ç ${adminName}:\n\n`;
          if (message.text) responseText += message.text;
          else if (message.caption) responseText += message.caption;

          const options = {};
          if (message.entities) options.entities = message.entities;
          if (message.caption_entities) options.caption_entities = message.caption_entities;

          try {
            await ctx.telegram.sendMessage(userChatId, responseText, options);
            if (message.photo) await ctx.telegram.sendPhoto(userChatId, message.photo[message.photo.length - 1].file_id, { caption: message.caption, caption_entities: message.caption_entities });
            else if (message.sticker) await ctx.telegram.sendSticker(userChatId, message.sticker.file_id);

            await ctx.reply('‚úÖ –í–∞—à –æ—Ç–≤–µ—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.');
          } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:', error);
            await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.');
          }
        }
      }
    }
    return;
  }

  // –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  if (chatId > 0 && !message.text?.startsWith('/')) {
    const user = message.from;
    const userName = user.first_name || user.last_name || '–ë–µ–∑ –∏–º–µ–Ω–∏';
    const userUsername = user.username ? `@${user.username}` : '–Ω–µ—Ç username';
    const time = new Date().toLocaleString('ru-RU');

    const caption = `üì© *–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –õ–°*\nüë§ *–ò–º—è:* ${userName}\nüîñ *Username:* ${userUsername}\nüÜî *ID:* ${user.id}\n‚è∞ *–í—Ä–µ–º—è:* ${time}`;

    try {
      await ctx.forwardMessage(ADMIN_CHAT_ID, chatId, message.message_id);
      await ctx.telegram.sendMessage(ADMIN_CHAT_ID, caption, { parse_mode: 'Markdown' });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º:', error);
    }
  }
}));

// ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî EXPORT –î–õ–Ø VERCEL ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî //
module.exports = async (req, res) => {
  try {
    if (req.method === 'POST') {
      await bot.handleUpdate(req.body);
      return res.status(200).send('OK');
    }
    res.status(200).send('Bot is running üöÄ');
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ webhook:', err);
    res.status(500).send('Internal Server Error');
  }
};
